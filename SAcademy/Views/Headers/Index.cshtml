@model IEnumerable<SAcademy.Models.Header>

@{
    Layout = "_LayoutDashboard";
    
}


<p>
    <a asp-action="Create">C</a>
</p>

@foreach (var item in Model) {

    <button type="button" class="border-0 bg-transparent" title="Modifier" data-toggle="modal" data-target="@("#EditHeader-"+item.Id)" data-url="@Url.Action($"Edit/{item.Id}")">
        <img src="~/img/edit.png" >
    </button>
    @await Html.PartialAsync("_EditHeaderPartialView",item)

    var height = string.Concat(item.HeightSection, "em");
    var Top = string.Concat(item.BVTopSize, "px");
    var left = string.Concat(item.BVLeftSize, "px");
    var size = string.Concat(item.BVSize, "px");
    if(item.Background != null)
    {
        <div class="ok" style="background-image:url(data:image/*;base64,@Convert.ToBase64String(item.Background)); height:@height;">
            @Html.Raw(item.Content)
            <div class="position-relative" style="top:@Top; left:@left;" >
                <a href="#" style="color:@item.BVColor; font-size:@size;">@item.Button</a>

                <a href="#" style="color:@item.BVColor; font-size:@size;">@item.Video</a>
            </div>
        </div>
    }else
    {
        <div class="ok" style="background:red; height:@height;">
            @Html.Raw(item.Content)
            <div class="position-relative" style="top:@Top; left:@left;">
                <a href="#" style="color:@item.BVColor; font-size:@size;">@item.Button</a>

                <a href="#" style="color:@item.BVColor; font-size:@size;">@item.Video</a>
            </div>
        </div>
    }
}
