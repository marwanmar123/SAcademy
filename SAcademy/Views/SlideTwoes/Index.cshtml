@model IEnumerable<SAcademy.Models.SlideTwo>

@{
    Layout = "_LayoutDashboard";
}
<p>
    @*<a asp-action="Create">O</a>*@
</p>
<div class="w-75 m-auto">
    @foreach (var item in Model)
    {
        if (item.Visible == true)
        {
            <form id="online" style="display:inline;" asp-action="isVisible">
                <input type="hidden" name="Id" value="@item.Id" />
                <input type="hidden" name="visible" value="false" />
                <button type="submit" class="btn online p-1"><img style="width:25px;" src="~/img/visible.png" /></button>
                <label>visible</label>
            </form>
        }
        else
        {
            <form id="online" style="display:inline;" asp-action="isVisible">
                <input type="hidden" name="Id" value="@item.Id" />
                <input type="hidden" name="visible" value="true" />
                <button type="submit" class="btn online p-1"><img style="width:25px;" src="~/img/invisible.png" /></button>
                <label>InVisible</label>
            </form>
        }
        <button type="button" class="border-0 bg-transparent" title="Modifier" data-toggle="modal" data-target="@("#EditSlideTwo-"+item.Id)" data-url="@Url.Action($"Edit/{item.Id}")">
            <img src="~/img/edit.png">
        </button>
        @await Html.PartialAsync("_EditSlideTwoPartialView",item)
        var size = string.Concat(item.TitleSize, "vw");
        <div class="text-center">
            <p style="color:@item.TitleColor; font-size:@size; font-weight:bold; font-family:@item.FontFamily;">@item.Title</p>
        </div>
        @Html.Raw(item.Content)
        <br />
        <h4>Second Content</h4>
        <hr />
        @Html.Raw(item.ContentTwo)

    }

    <div class="w-100 m-auto">
        <section class="splide" aria-label="Splide Basic HTML Example">
            <div class="splide__track text-center">
                <ul class="splide__list">
                    @foreach (var item in Model)
                    {
                        @foreach (var i in item.Images)
                        {
                            <li class="splide__slide m-auto h-50 w-50">
                                <img class="" style="width:40px;height:40px; margin:1em;" src="data:image/*;base64,@Convert.ToBase64String(i.Data)">
                            </li>
                        }
                    }
                </ul>
            </div>
        </section>
    </div>
</div>

<script>
    var splide = new Splide('.splide', {
        perPage: 6,
        type: 'loop',
        autoplay: true,
    });

    splide.mount();
</script>